{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","style","cursor","htmlFor","TextForm","useState","text","setText","wordCount","setWordCount","color","heading","rows","value","onChange","event","target","enteredText","trim","split","length","placeholder","backgroundColor","newText","toUpperCase","showAlert","toLowerCase","boxText","document","getElementById","select","navigator","clipboard","writeText","join","toFixed","border","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","defaultProps","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.bc8517ad.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n// import { Link } from 'react-router-dom';\n\nexport default function Navbar(props){\n  return (\n    <nav className={`navbar navbar-expand-lg navbar-dark bg-${props.mode}`}>\n      <div className=\"container-fluid\">\n        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\n        {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\n            </li>\n            {/* <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/about\">About</Link>\n            </li> */}\n          </ul>\n          <div className={'form-check form-switch position-absolute end-0 m-3 text-white'}>\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" style={{cursor: 'pointer'}}/>\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\n          </div>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\n// Navbar.propTypes = {title: PropTypes.string.isRequired}\nNavbar.propTypes = {title: PropTypes.string}\nNavbar.defaultProps = {title: 'Title here'}\n","import React from 'react';\nimport { useState } from 'react';\n\nexport default function TextForm(props) {\n  const handleUpClick = () => {\n    let newText = text.toUpperCase();\n    setText(newText);\n    props.showAlert(\"Converted to upper case !\", \"success\");\n  }\n\n  const handleLowClick = () => {\n    let newText = text.toLowerCase();\n    setText(newText);\n    props.showAlert(\"Converted to lower case !\", \"success\");\n  }\n\n  const handleCopy = () => {\n    var boxText = document.getElementById(\"myBox\");\n    boxText.select();\n    navigator.clipboard.writeText(boxText.value);\n    props.showAlert(\"Text Copied to clipboard !\", \"success\");\n  }\n\n  const handleExtraSpaces = () => {\n    let newText = text.split(/ +/);\n    setText(newText.join(' '));\n    props.showAlert(\"Extra spaces managed !\", \"success\");\n  }\n\n  const handleClearText = () => {\n    setText(\"\");\n    setWordCount(0);\n    props.showAlert(\"Text cleared !\", \"success\");\n  }\n\n  const handleOnChange = (event) => {\n    setText(event.target.value);\n    let enteredText = event.target.value;\n    setWordCount(enteredText.trim().split(' ').length);\n    if (enteredText.length === 0){\n      setWordCount(0);\n    }\n    // console.log(event.target.value + \" - \" + event.target.value.length);\n    // console.log(text + \" - \" + text.length);\n    // console.log(\"--------------------\");\n  }\n\n  const [text, setText] = useState('');\n  const [wordCount, setWordCount] = useState(0);\n  return (\n    <>\n      <div className='container' style={{color: props.mode === 'dark' ? 'white' : 'black'}}>\n        <h1>{props.heading}</h1>\n        <div className=\"mb-3\">\n          <textarea className=\"form-control\" id=\"myBox\" rows=\"8\" value={text} onChange={handleOnChange}\n          placeholder='Enter text here' style={{backgroundColor: props.mode === 'dark' ? '#212529' : 'white',\n          color: props.mode === 'dark' ? 'white' : 'black'}}></textarea>\n        </div>\n        <button className=\"btn btn-sm btn-primary mx-2\" onClick={handleUpClick} >Convert to Uppercase</button>\n        <button className=\"btn btn-sm btn-primary mx-2\" onClick={handleLowClick} >Convert to Lowercase</button>\n        <button className=\"btn btn-sm btn-primary mx-2\" onClick={handleCopy} >Copy Text</button>\n        <button className=\"btn btn-sm btn-primary mx-2\" onClick={handleExtraSpaces} >Handle Extra Spaces</button>\n        <button className=\"btn btn-sm btn-primary mx-2\" onClick={handleClearText} >Clear Text</button>\n      </div>\n      <div className=\"container my-4\" style={{color: props.mode === 'dark' ? 'white' : 'black'}}>\n        <h2>Your text summary</h2>\n        <p><b>{wordCount}</b> words and <b>{text.length}</b> characters</p>\n        <p><b>{(0.008 * wordCount).toFixed(3)}</b> minutes reading</p>\n        <h3>Preview</h3>\n        <p className='p-2 rounded-3' style={{border:`1px solid ${props.mode === 'dark' ? 'white' : 'black'}`}}>{text.length > 0 ? text : \"Enter text above in the box to preview it here\"}</p>\n      </div>\n    </>\n  )\n}\n","import React from 'react'\n\nexport default function Alert(props) {\n  const capitalize = (word)=>{\n    const lower = word.toLowerCase();\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\n  }\n\n  return (\n    props.alert && <div>\n      <div className={`alert alert-${props.alert.type} fade show`} role=\"alert\">\n        <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\n      </div>\n    </div>\n  )\n}\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\nimport {useState} from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('primary');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode = ()=>{\n    if(mode === 'primary'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabeled\", \"success\");\n      document.title = \"TextUtils - Dark Mode\";\n      // setInterval(() => {\n      //   document.title = \"TextUtils is Amazing !\";\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = \"Install TextUtils Now !\";\n      // }, 1500);\n    }\n    else{\n      setMode('primary');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabeled\", \"success\");\n      document.title = \"TextUtils - Light Mode\";\n    }\n  };\n\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title=\"Textutils\" mode={mode} toggleMode={toggleMode}/>\n        <Alert alert={alert}/>\n        {/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\"> */}\n            <TextForm heading='Enter the text to analyze below:' mode={mode} showAlert={showAlert}/>\n          {/* </Route> */}\n          {/* <Route path=\"/home\">\n            <TextForm heading='Enter the text to analyze below:' mode={mode} showAlert={showAlert}/>\n          </Route> */}\n        {/* </Switch>\n      </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}